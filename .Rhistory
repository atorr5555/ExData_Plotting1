par(mar = c(4, 4, 2, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 20)
plot(z, x, pch = 20)
plot(z, y, pch = 20)
par(mfrow = c(1, 1))
plot(z, y, pch = 20)
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2, 50)
g <- gl(2, 50, labels = c("Male", "Female"))
g
plot(x, y)
plot(x, y, type = "n")
points(x[g == "Male"], y[g == "Male"], col = "green")
points(x[g == "Female"], y[g == "Female"], col = "blue")
q()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
high
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg = pollution$region
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, col = "red", data = pollution)
par(mfrow=c(2,1),mar=c(4,4,2,1))
lm(x)
boxplot(pm25 ~ region, col = "red", data = pollution)
east <- subset(pollution,region=="east")
west <- subset(pollution,region=="west")
head(east)
hist(east, col = "green")
hist(pm25, col = "green")
hist(east, col = "green")
pm25
hist(ppm, col = "green")
hist(east$pm25, col = "green")
east <- subset(pollution,region=="east")
hist(subset(pollution,region=="west")$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")}
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
east <- subset(pollution,region=="east")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(faithful)
with(faithful, plot(eruptions, waiting))
plot(faithful)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off
dev.off()
head(cars)
plot(cars$speed)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
hist(airquality$Ozone)
dev.cur()
dev.off
dev.off()
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone, and Wind in New York City")
title(main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
?subset
View(airquality)
View(airquality)
may <- subset(airquality, Month ==5)
points(may, col = "red", pch = 1)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(median(airquality$Wind), lty = 2, lwd = 2)
abline(median(airquality$Wind), lty = 2)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = c(1, 2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
## Downloading the data and unzip it
#fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
#download.file(fileUrl, destfile = "./exdata_data_household_power_consumption.zip", method = "curl")
unzip(zipfile = "./exdata_data_household_power_consumption.zip")
source('~/Documents/ExData_Plotting1/download_data.R')
unzip(zipfile = "./exdata_data_household_power_consumption.zip")
unzip(zipfile = "./exdata_data_household_power_consumption.zip")
setwd("~/Documents/ExData_Plotting1")
unzip(zipfile = "./exdata_data_household_power_consumption.zip")
data <- read.table("./household_power_consumption.txt")
head(data)
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
head(data)
getwd()
data$Time <- strptime(data$Time, format = "%H:%M:%S")
head(data)
class(data$Time)
data$Date <- as.Date(data$Date)
class(data$Date)
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
data[data$Date %in% c('2007-02-01', '2007-02-02'), ]
data[data$Date %in% c("2007-02-01", "2007-02-02"), ]
data$Date %in% c("2007-02-01", "2007-02-02")
data$Date == "2007-02-01"
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
head(data)
data[data$Date %in% c("01/02/2007", "02/02/2007"), ]
data[data$Date == "01/02/2007", ]
data[data$Date == "16/12/2006", ]
data[data$Date == "1/2/2007", ]
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
data[data$Date %in% c("1/2/2007", "2/2/2007"), ]
head(data)
hist(data$Global_active_power, col = "red")
hist(as.numeric(data$Global_active_power), col = "red")
hist(as.numeric(data$Global_active_power), col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 15)
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 10)
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 12)
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 13)
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 14)
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 15)
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 15, xlim = c(0, 6))
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 10, xlim = c(0, 6))
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks = 12, xlim = c(0, 6))
hist(as.numeric(data$Global_active_power) / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", xlim = c(0, 6))
source('~/Downloads/datasciencecoursera-master/4_Exploratory_Data_Analysis/project1/plot1.R')
getwd()
#Reads in data from file then subsets data for specified dates
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Prevents histogram from printing in scientific notation
powerDT[, Global_active_power := lapply(.SD, as.numeric), .SDcols = c("Global_active_power")]
# Change Date Column to Date Type
powerDT[, Date := lapply(.SD, as.Date, "%d/%m/%Y"), .SDcols = c("Date")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(Date >= "2007-02-01") & (Date <= "2007-02-02")]
hist(powerDT[, Global_active_power], main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Reading the data
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
## Converting the Date to Date class
data$Date <- as.Date(data$Date)
data[(data$Date >= "2007-02-01") & (data$Date <= "2007-02-02"), ]
data[(data$Date >= "2007/02/01") & (data$Date <= "2007/02/02"), ]
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
data[(data$Date >= "2007-02-01") & (data$Date <= "2007-02-02"), ]
hist(data$Global_active_power, col = "red")
hist(as.numeric(data$Global_active_power), col = "red")
hist(as.numeric(data$Global_active_power) / 1000, col = "red")
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
data[(data$Date >= "2007-02-01") & (data$Date <= "2007-02-02"), ]
data$Global_active_power <- as.numeric(data$Global_active_power)
data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
data <- data[(data$Date >= "2007-02-01") & (data$Date <= "2007-02-02"), ]
data$Global_active_power <- as.numeric(data$Global_active_power)
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(data$Global_active_power / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", xlim = c(0, 2, 4, 6))
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", xlim = c(0, 6))
hist(data$Global_active_power / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", xlim = c(0, 6))
hist(data$Global_active_power / 1000, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", xlim = c(0, 6), ylim = c(0, 1200))
summary(data$Global_active_power)
source('~/Documents/ExData_Plotting1/plot1.R')
#Reads in data from file then subsets data for specified dates
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Prevents histogram from printing in scientific notation
powerDT[, Global_active_power := lapply(.SD, as.numeric), .SDcols = c("Global_active_power")]
# Change Date Column to Date Type
powerDT[, Date := lapply(.SD, as.Date, "%d/%m/%Y"), .SDcols = c("Date")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(Date >= "2007-02-01") & (Date <= "2007-02-02")]
hist(powerDT[, Global_active_power], main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
data$Date <- as.Date(data$Date, "%d/%m/%Y")
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
hist(data$Global_active_power / 1000, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
summary(data$Global_active_power)
## Plot 1
hist(data$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
source('~/Documents/ExData_Plotting1/plot1.R')
source('~/Documents/ExData_Plotting1/plot2.R')
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
## Converting the Date to Date class
data$Date <- as.Date(data$Date, "%d/%m/%Y")
## Converting the time to its class
data$Time <- strptime(data$Time, "%H:%M:%S")
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
head(data)
data$Date <- as.Date(data$Date, "%d/%m/%Y")
data$Time <- strptime(data$Time, "%H:%M:%S")
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
data$Time <- strptime(data$Time, format = "%H:%M:%S")
ibrary("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
## Converting the Date to Date class
data$Date <- as.Date(data$Date, "%d/%m/%Y")
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-s02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
## Converting the Date to Date class
data$Date <- as.Date(data$Date, "%d/%m/%Y")
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
plot(x = data$Date, y = data$Global_active_power, type="l", xlab="",
ylab="Global Active Power (kilowatts)"
)
source('~/Documents/ExData_Plotting1/plot2.R')
source('~/Documents/ExData_Plotting1/plot2.R')
source('~/Documents/ExData_Plotting1/plot2.R')
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
summary(data$dateTime)
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Making a POSIXct date capable of being filtered and graphed by time of day
data$dateTime <- as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")
# Making a POSIXct date capable of being filtered and graphed by time of day
data$dateTime <- as.POSIXct(paste(data$Date, data$Time), format = "%d/%m/%Y %H:%M:%S")
summary(data$dateTime)
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
plot(x = data$dateTime, y = data$Global_active_power, type="l", xlab="",
ylab="Global Active Power (kilowatts)"
)
class(data$dateTime)
plot(data$dateTime ~ data$Global_active_power, type="l", xlab="",
ylab="Global Active Power (kilowatts)"
)
nrow(data[is.na(dateTime)])
nrow(data[!is.na(dateTime)])
nrow(data$dateTime)
data$dateTime
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
nrow(data$dateTime)
data$dateTime
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
data[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
head(data)
data$dateTime
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
head(data)
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
## Converting the Date to Date class
data$Date <- as.Date(data$Date, "%d/%m/%Y")
head(data)
## We will only be using data from the dates 2007-02-01 and 2007-02-02
data <- data[(Date >= "2007-02-01") & (Date <= "2007-02-02"), ]
## Convert column to numeric
data$Global_active_power <- as.numeric(data$Global_active_power)
head(data)
plot(x = data$dateTime, y = data$Global_active_power, type="l", xlab="",
ylab="Global Active Power (kilowatts)"
)
plot(x = data$dateTime, y = data$Global_active_power, xlab="",
ylab="Global Active Power (kilowatts)"
)
plot(x = data$dateTime, y = data$Global_active_power, xlab="", type = "l"
ylab="Global Active Power (kilowatts)"
)
plot(x = data$dateTime, y = data$Global_active_power, xlab="", type = "l",
ylab="Global Active Power (kilowatts)"
)
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
data[0, ]
data[1, ]
test <- data[1, ]
test$Date
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
functionDT <- function(x) {
as.POSIXct(paste(x$Date, x$Time), format = "%d/%m/%Y %H:%M:%S")
}
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime] <- lapply(data, functionDT)
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
functionDT <- function(x) {
#as.POSIXct(paste(x$Date, x$Time), format = "%d/%m/%Y %H:%M:%S")
print(x)
}
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime] <- lapply(data, functionDT)
library("data.table")
## Reading the data
data <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
functionDT <- function(x) {
as.POSIXct(paste(x[1], x[2]), format = "%d/%m/%Y %H:%M:%S")
}
# Making a POSIXct date capable of being filtered and graphed by time of day
data[, dateTime] <- lapply(data, functionDT)
?tabl
?table
# Making a POSIXct date capable of being filtered and graphed by time of day
dateTime <- lapply(data, functionDT)
data <- cbind(data, dateTime)
source('~/Documents/ExData_Plotting1/plot2.R')
source('~/Documents/ExData_Plotting1/plot2.R')
source('~/Documents/ExData_Plotting1/plot3.R')
lines(data$Sub_metering_2, col = "red")
plot(x = data$dateTime, y = data$Sub_metering_1, xlab="", type = "l",
ylab="Energy sub meteriing"
)
lines(data$dateTime, data$Sub_metering_2, col = "red")
plot(x = data$dateTime, y = data$Sub_metering_1, xlab="", type = "l",
ylab="Energy sub meteriing"
)
lines(data$dateTime, data$Sub_metering_2, col = "red")
lines(data$dateTime, data$Sub_metering_3, col = "blue")
legend("topright", col = c("black", "red", "blue"),
c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  ")
)
plot(x = data$dateTime, y = data$Sub_metering_1, xlab="", type = "l",
ylab="Energy sub meteriing"
)
lines(data$dateTime, data$Sub_metering_2, col = "red")
lines(data$dateTime, data$Sub_metering_3, col = "blue")
legend("topright"
, col=c("black","red","blue")
, c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  ")
,lty=c(1,1), lwd=c(1,1)
)
plot(x = data$dateTime, y = data$Sub_metering_1, xlab="", type = "l",
ylab="Energy sub meteriing"
)
lines(data$dateTime, data$Sub_metering_2, col = "red")
lines(data$dateTime, data$Sub_metering_3, col = "blue")
legend("topright"
, col=c("black","red","blue")
, c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  ")
,lty=c(2,2), lwd=c(2,2)
)
plot(x = data$dateTime, y = data$Sub_metering_1, xlab="", type = "l",
ylab="Energy sub meteriing"
)
lines(data$dateTime, data$Sub_metering_2, col = "red")
lines(data$dateTime, data$Sub_metering_3, col = "blue")
legend("topright"
, col=c("black","red","blue")
, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
,lty=c(1, 1), lwd=c(1, 1)
)
source('~/Documents/ExData_Plotting1/plot3.R')
source('~/Documents/ExData_Plotting1/plot4.R')
source('~/Documents/ExData_Plotting1/plot4.R')
source('~/Documents/ExData_Plotting1/plot4.R')
source('~/Documents/ExData_Plotting1/plot1.R')
source('~/Documents/ExData_Plotting1/plot2.R')
source('~/Documents/ExData_Plotting1/plot3.R')
source('~/Documents/ExData_Plotting1/plot4.R')
source('~/Documents/ExData_Plotting1/plot4.R')
