install.packages("rmarkdown")
q()
x <- 1:20
x
q()
add2 <- function(x, y) {
x+y ## The function return whatever the last statement is
}
add2(3,5)
aboveN <- function(x, n) {
use <- x > n
s[use]
}
x <- 1:20
aboceN(x, 12)
aboveN(x, 12)
aboveN <- function(x, n) {
use <- x > n
x[use]
}
aboveN(x, 12)
aboveN <- function(x, n = 10) {
use <- x > n
x[use]
}
aboveN(x)
columnMean <- function(x) {
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(x[,i])
}
means
}
columnMean(airquality)
columnMean <- function(x, removeNA = TRUE) {
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(x[,i], na.rm = removeNA)
}
means
}
columnMean(airquality)
c=rbind(c(1, -1/4), c(-1/4, 1))
solve(c)
solve(c) %*% c
source('~/Documents/DataScienceR/RProgramming/ProgrammingAssignment2/cachematrix.R')
unlink('Downloads/data_cache', recursive = TRUE)
fileUrl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
q()
con = url("https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
length(htmlCode)
library(xml2)
url <- "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- read_html(url, encoding = "UTF-8")
xml_find_all(html, "//title")
xml_find_all(html, "//td[@id='col-citedby']")
xml_find_all(html, "//td[@class='gsc_a_c']")
library(httr)
html2 = GET(url)
content2 = content(html2, as = "text")
parsedHtml = htmlParse(content2, asText = TRUE)
parsedHtml = parsed_content(content2, as = "text")
parsedHtml = parsed_content(content2, as = "parsed")
parsedHtml = parsed_content(content2)
content2 = content(html2, as = "text")
parsedHtml = parsed_content(content2)
content2
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg1 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user","passwd"))
pg2
pg1
names(pg2)
names(pg1)
q()
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
q()
knitr::opts_chunk$set(echo = TRUE)
x <- rnorm(100)
hist(x)
rug(x)
y <- rnorm(100)
plot(x, y)
z <- rnorm(100)
plot(x, z)
plot(x, y)
par(mar = c(2, 2, 2, 2))
plot(x, y)
par(mar = c(4, 4, 2, 2))
plot(x, y)
plot(x, y, pch = 20)
plot(x, y, pch = 19)
plot(x, y, pch = 2)
plot(x, y, pch = 3)
plot(x, y, pch = 4)
plot(x, y, pch = 20)
plot(x, y, pch = 1)
plot(x, y, pch = 24)
plot(x, y, pch = 25)
plot(x, y, pch = 20)
plot(x, y, pch = 20)
title("Scatterplot")
text(-2, -2, "Label")
legend("topleft", legend = "Data", pch = 20)
legend("topleft", legend = "Data", pch = 20, col = "yellow")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit)
abline(fit, lwd = 3)
abline(fit, lwd = 3, col = "blue")
plot(x, y, pch = 20, xlab = "Weight", ylab = "Height", main = "Scatterplot")
legend("topright", legend = "Data", pch = 20)
fit = lm(y ~ x)
abline(fit, lwd = 3, col = "red")
< <- rpois(100)
z <- rpois(100)
z <- rpois(100, 2)
z <- rpois(100, 2)
par(mfrow = c(2, 1))
plot(x, y = pch = 20)
plot(x, y, pch = 20)
plot(x, z, pch = 20)
par("mar")
par(mar = c(2, 2, 1, 1))
plot(x, y, pch = 20)
plot(x, z, pch = 20)
par(mfrow = c(1, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 20)
par(mfrow = c(2, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 20)
plot(z, y, pch = 20)
plot(z, x, pch = 20)
par(mar = c(4, 4, 2, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 20)
plot(z, x, pch = 20)
plot(z, y, pch = 20)
par(mfrow = c(1, 1))
plot(z, y, pch = 20)
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2, 50)
g <- gl(2, 50, labels = c("Male", "Female"))
g
plot(x, y)
plot(x, y, type = "n")
points(x[g == "Male"], y[g == "Male"], col = "green")
points(x[g == "Female"], y[g == "Female"], col = "blue")
q()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
high
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg = pollution$region
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, col = "red", data = pollution)
par(mfrow=c(2,1),mar=c(4,4,2,1))
lm(x)
boxplot(pm25 ~ region, col = "red", data = pollution)
east <- subset(pollution,region=="east")
west <- subset(pollution,region=="west")
head(east)
hist(east, col = "green")
hist(pm25, col = "green")
hist(east, col = "green")
pm25
hist(ppm, col = "green")
hist(east$pm25, col = "green")
east <- subset(pollution,region=="east")
hist(subset(pollution,region=="west")$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")}
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
east <- subset(pollution,region=="east")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(faithful)
with(faithful, plot(eruptions, waiting))
plot(faithful)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off
dev.off()
head(cars)
plot(cars$speed)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
hist(airquality$Ozone)
dev.cur()
dev.off
dev.off()
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone, and Wind in New York City")
title(main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
?subset
View(airquality)
View(airquality)
may <- subset(airquality, Month ==5)
points(may, col = "red", pch = 1)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(median(airquality$Wind), lty = 2, lwd = 2)
abline(median(airquality$Wind), lty = 2)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = c(1, 2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
?legend
source('~/Documents/ExData_Plotting1/plot4.R')
setwd("~/Documents/ExData_Plotting1")
source('~/Documents/ExData_Plotting1/plot4.R')
source('~/Documents/ExData_Plotting1/plot4.R')
source('~/Documents/ExData_Plotting1/plot4.R')
